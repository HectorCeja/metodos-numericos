/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazgraficametodos;

import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Héctor
 */
public class PanelTrapTabla extends javax.swing.JPanel {

    /**
     * Creates new form PanelTrapTabla
     */
    public PanelTrapTabla() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        puntos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        resul = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fff = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        prop = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 255, 102));
        setPreferredSize(new java.awt.Dimension(800, 560));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Ingrese números de puntos:");
        add(jLabel2);
        jLabel2.setBounds(40, 130, 190, 17);

        puntos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        puntos.setDragEnabled(true);
        puntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntosActionPerformed(evt);
            }
        });
        add(puntos);
        puntos.setBounds(230, 120, 140, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Tabla resultante");
        add(jLabel3);
        jLabel3.setBounds(150, 310, 120, 17);

        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(230, 170, 140, 30);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(530, 310, 140, 50);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Valor de área aproximada  :");
        add(jLabel7);
        jLabel7.setBounds(520, 410, 180, 17);

        resul.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(resul);
        resul.setBounds(500, 440, 210, 30);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel1.setText("             Método de Trapecio Tabla");
        add(jLabel1);
        jLabel1.setBounds(40, 30, 700, 30);

        fff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                ""
            }
        ));
        jScrollPane1.setViewportView(fff);

        add(jScrollPane1);
        jScrollPane1.setBounds(100, 330, 190, 200);

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton2.setText("Vaciar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(220, 230, 130, 50);

        jButton3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton3.setText("Aceptar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(60, 230, 140, 50);

        prop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "    Y"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(prop);

        add(jScrollPane2);
        jScrollPane2.setBounds(570, 120, 80, 180);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Ingrese valor de h:");
        add(jLabel4);
        jLabel4.setBounds(40, 180, 120, 17);
    }// </editor-fold>//GEN-END:initComponents

    private void puntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        char c = evt.getKeyChar();
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            DecimalFormat D = new DecimalFormat("0.000");
            int n = Integer.parseInt(puntos.getText());
            double h = Double.parseDouble(jTextField2.getText());
            DefaultTableModel modelo = new DefaultTableModel();
            DefaultTableModel modelo2 = new DefaultTableModel();
            Vector valory = new Vector();
            double[] y = new double[n];
            int m[] = new int[n];
            m[0] = 1;
            m[n - 1] = 1;
            for (int j = 1; j < n - 1; j++) {
                m[j] = 2;
            }

            for (int i = 0; i < inco; i++) {
                y[i] = Double.parseDouble(String.valueOf(prop.getValueAt(i, 0)));
                valory.add(y[i]);
            }
            modelo2.addColumn("Y", valory);
            prop.setModel(modelo2);
            prop.updateUI();

            Vector valoresY = new Vector();
            Vector valoresM = new Vector();
            Vector valoresMY = new Vector();

            valoresY.add(D.format(y[0]));
            valoresM.add(m[0]);
            valoresMY.add(D.format(m[0] * y[0]));

           for (int i = 1; i < n - 1; i++) {
                valoresY.add(D.format(y[i]));
                valoresM.add(m[i]);
                valoresMY.add(D.format(m[i] * y[i]));
            }
            valoresY.add(D.format(y[n - 1]));
            valoresM.add(m[n - 1]);
            valoresMY.add(D.format(m[n - 1] * y[n - 1]));
            modelo.addColumn("Y", valoresY);
            modelo.addColumn("M", valoresM);
            modelo.addColumn("M*Y", valoresMY);
            fff.setModel(modelo);
            fff.updateUI();

            double area = y[0] + y[n - 1];
            for (int i = 1; i < n - 1; i++) {
                area = area + 2 * y[i];
            }
            area = area * (h / 2);

            String s = "";
            s += "" + D.format(area);
            resul.setText(s);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Favor de introducir valores validos");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            puntos.setText("");
            jTextField2.setText("");
            resul.setText("");
            for (int i = 0; i < prop.getRowCount(); i++) {

                prop.setValueAt(null, i, 0);
                for (int j = 1; j < prop.getColumnCount(); j++) {

                    prop.setValueAt(null, i, j);

                }
            }
            for (int i = 0; i < fff.getRowCount(); i++) {

                fff.setValueAt(null, i, 0);
                for (int j = 1; j < fff.getColumnCount(); j++) {

                    fff.setValueAt(null, i, j);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los elementos están vacíos");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    int inco;
    DefaultTableModel modelo;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            inco = Integer.parseInt(puntos.getText());
            modelo = new DefaultTableModel();
            modelo.setRowCount(inco);
            modelo.setColumnCount(1);
            prop.setModel(modelo);
            prop.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Favor de introducir valores validos");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable fff;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable prop;
    private javax.swing.JTextField puntos;
    private javax.swing.JTextField resul;
    // End of variables declaration//GEN-END:variables
}
