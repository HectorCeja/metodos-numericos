/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazgraficametodos;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Héctor
 */
public class PanelLimites extends javax.swing.JPanel {

    /**
     * Creates new form PanelLimites
     */
    Ecuacion ecu = new Ecuacion();

    public PanelLimites() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLimites = new javax.swing.JTable();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 204));
        setPreferredSize(new java.awt.Dimension(800, 560));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        jLabel1.setText("             Método de Límites");
        add(jLabel1);
        jLabel1.setBounds(210, 20, 420, 30);

        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField1.setDragEnabled(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(220, 76, 120, 20);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Ingrese ecuación:");
        add(jLabel2);
        jLabel2.setBounds(30, 80, 109, 17);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Ingrese valor de x:");
        add(jLabel3);
        jLabel3.setBounds(30, 120, 120, 17);

        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(280, 116, 60, 20);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Ingrese error permitido:");
        add(jLabel5);
        jLabel5.setBounds(30, 160, 151, 17);

        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        add(jTextField4);
        jTextField4.setBounds(280, 160, 60, 20);

        jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        add(jTextField5);
        jTextField5.setBounds(280, 200, 60, 20);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Ingrese número de iteraciones:");
        add(jLabel6);
        jLabel6.setBounds(30, 200, 193, 17);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(65, 260, 110, 40);

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton2.setText("Vaciar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(220, 260, 90, 40);

        tablaLimites.setBackground(new java.awt.Color(255, 255, 204));
        tablaLimites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ));
        jScrollPane2.setViewportView(tablaLimites);

        add(jScrollPane2);
        jScrollPane2.setBounds(120, 320, 610, 210);

        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jTextField6);
        jTextField6.setBounds(520, 270, 210, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("El valor de la derivada es:");
        add(jLabel7);
        jLabel7.setBounds(360, 280, 158, 17);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        char c = evt.getKeyChar();
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped

    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String ec;
            ec = jTextField1.getText();
            double x = Double.parseDouble(jTextField2.getText());
            double error = Double.parseDouble(jTextField4.getText());
            int iter = Integer.parseInt(jTextField5.getText());
            DefaultTableModel modelo = new DefaultTableModel();

            Vector valoresN = new Vector();
            Vector valoresH = new Vector();
            Vector valoresK = new Vector();
            Vector valoresXH = new Vector();
            Vector valoresFXH = new Vector();
            Vector valoresFX = new Vector();
            Vector valoresFXHFX = new Vector();
            Vector valoresFXX = new Vector();
            Vector valoresE = new Vector();

            int n = 1;
            double da = 1 * Math.pow(10, n);
            double err=0, k, derivada, h = 0;
            valoresE.add(err);
            do {
                h = Math.pow(.1, n);
                k = 1 / h;
                derivada = (ecu.ecuacion(ec, x + Math.pow(0.1, n)) - ecu.ecuacion(ec, x)) * k;
                err = Math.abs(da - derivada);
                
                valoresN.add(n);
                valoresH.add(h);
                valoresK.add(k);
                valoresXH.add((x + h));
                valoresFXH.add(ecu.ecuacion(ec, x + h));
                valoresFX.add(ecu.ecuacion(ec, x));
                valoresFXHFX.add(ecu.ecuacion(ec, x + h) - ecu.ecuacion(ec, x));
                valoresFXX.add((ecu.ecuacion(ec, x + h) - ecu.ecuacion(ec, x)) * k);
                if(n>1){
                valoresE.add(err);
                }
             
                da = derivada;
                

                n++;
            } while (err > error && n < iter);
            modelo.addColumn("n", valoresN);
            modelo.addColumn("h", valoresH);
            modelo.addColumn("k", valoresK);
            modelo.addColumn("x+h", valoresXH);
            modelo.addColumn("f(x+h)", valoresFXH);
            modelo.addColumn("f(x)", valoresFX);
            modelo.addColumn("f(x+h)-f(x)", valoresFXHFX);
            modelo.addColumn("f(X)", valoresFXX);
            modelo.addColumn("e", valoresE);

            jTextField6.setText("" + derivada);

            tablaLimites.setModel(modelo);
            tablaLimites.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Favor de introducir valores validos");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");

            for (int i = 0; i < tablaLimites.getRowCount(); i++) {

                tablaLimites.setValueAt(null, i, 0);
                for (int j = 1; j < tablaLimites.getColumnCount(); j++) {

                    tablaLimites.setValueAt(null, i, j);

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los elementos están vacíos");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTable tablaLimites;
    // End of variables declaration//GEN-END:variables
}
