/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazgraficametodos;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Héctor
 */
public class PanelFinitas extends javax.swing.JPanel {

    DecimalFormat df = new DecimalFormat("0.0000");
    int f, c;
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modelo1 = new DefaultTableModel();
    DefaultTableModel modelo2 = new DefaultTableModel();
    Boolean ban = false;
    double x1;

    public PanelFinitas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 153, 255));
        setPreferredSize(new java.awt.Dimension(800, 560));
        setLayout(null);

        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(236, 233, 216));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 78, 370, 170);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(530, 100, 100, 30);

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton2.setText("Cargar Tabla");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(390, 200, 110, 40);

        jButton3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton3.setText("Cargar Puntos");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(520, 200, 120, 40);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        add(jScrollPane3);
        jScrollPane3.setBounds(440, 410, 166, 122);

        jTable2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2);
        jScrollPane2.setBounds(30, 340, 270, 200);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(190, 260, 81, 30);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        add(jTextField3);
        jTextField3.setBounds(490, 260, 270, 30);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel1.setText("Método de diferencias finitas");
        add(jLabel1);
        jLabel1.setBounds(110, 30, 664, 25);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Numero de puntos:");
        add(jLabel3);
        jLabel3.setBounds(400, 110, 117, 17);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Orden del polinomio:");
        add(jLabel6);
        jLabel6.setBounds(50, 270, 130, 17);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Soluciones del sistema de ecuaciones");
        add(jLabel5);
        jLabel5.setBounds(420, 380, 250, 20);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Sistema de ecuaciones generado");
        add(jLabel8);
        jLabel8.setBounds(60, 310, 210, 20);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Polinomio generado:");
        add(jLabel4);
        jLabel4.setBounds(340, 270, 126, 17);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton1.setText("Vaciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(660, 200, 110, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            f = Integer.parseInt(jTextField1.getText());
            c = f - 1;

            //
            Object col[] = new Object[f];//  al erreglo mostrara en el titulo del JTabel las las incognitas y su solucion de la ecuaciom
            // ejemplo si el sistema tiene 2 incognitas aparecera en la pantalla una matriz de 2x3
            // se motrara en el titulo del JTable  x1  x2   d
            for (int j = 0; j < 2; j++) {
                if (j == 0) {
                    col[j] = "X";
                } else {
                    col[j] = "Y";
                }
            }

            for (int j = 2; j < f; j++) {
                col[j] = "d" + (j - 1) + "Y";
            }

            modelo = new DefaultTableModel(col, f);
            jTable1.setModel(modelo);
            for (int i = f - 1; i > 1; i--) {
                jTable1.removeColumn(jTable1.getColumnModel().getColumn(i));
            }
            modelo1 = new DefaultTableModel(col, f);

            Object col1[] = new Object[c];
            for (int j = 0; j < c; j++) {
                if (j < c - 1) {
                    col1[j] = "X" + (j + 1);
                } else {
                    col1[j] = "d";
                }
            }
            modelo2 = new DefaultTableModel(col1, c - 1);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al ingresar los datos");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTable2.setModel(modelo2);
        double x[] = new double[f];
        double y[] = new double[f];
        Metodos me = new Metodos();

        jTextField2.setEnabled(true);
        jTextField3.setEnabled(true);
        try {
            int m, n;
            n = f;

            double mate[][] = new double[n - 2][n - 1];
            double[][] I = new double[n - 2][n - 1];
            int g = 0;
            String p = "";
            for (int i = 0; i < f; i++) {// pasamos a alamcenar en un arreglo los datos ingresados en el JTable
                for (int j = 0; j < 1; j++) {//
                    x[i] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, j)));

                }

            }
            for (int i = 0; i < f; i++) {// pasamos a alamcenar en un arreglo los datos ingresados en el JTable
                for (int j = 1; j == 1; j++) {//
                    y[i] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, j)));

                }
            }

            jTable1.setModel(modelo1);
            for (int i = 0; i < f; i++) {
                jTable1.setValueAt(x[i], i, 0);
                jTable1.setValueAt(y[i], i, 1);
            }
            int v;

            double[] B = new double[n];
            double[][] R = new double[n][n];

            //COPIANDO Y A B
            for (int i = 0; i < n; i++) {
                B[i] = y[i];
            }

            //EMPIEZA METODO  PARA CALCULAR LAS DIFERENCIAS
            v = n - 1;
            for (int i = 0; i < n - 2; i++) {

                for (int j = 0; j < v; j++) {
                    R[i][j] = y[j + 1] - y[j];

                    y[j] = R[i][j];
                    jTable1.setValueAt(y[j], j, i + 2);
                }

                v = v - 1;
                double s = R[i][0];
                double s2 = R[i][1];
                if (s == 0 && s2 == 0) {
                    jTextField2.setText("" + i);

                    //SE CALCULA E IMPRIME EN LA TABLA LA MATRIZ GENERADA
                    for (int k = 0; k < g + 1; k++) {
                        for (int j = 0; j < g + 1; j++) {
                            I[k][j] = Math.pow(x[k], (g - j));
                            if (j >= g) {
                                I[k][j + 1] = B[k];
                            }
                        }
                    }

                    for (int k = 0; k < g + 1; k++) {
                        for (int j = 0; j < g + 2; j++) {

                            jTable2.setValueAt(I[k][j], k, j);
                        }

                    }

                    break;
                }
                g = i + 1;
            }

            for (int i = 0; i < n - 2; i++) {// pasamos a alamcenar en un arreglo los datos ingresados en el JTable
                for (int j = 0; j < n - 1; j++) {//
                    mate[i][j] = Double.parseDouble(String.valueOf(jTable2.getValueAt(i, j)));
                }

            }

            double result[] = me.cramer(n - 2, mate);

            int aux = n - 2;
            //Imprimir incognitas
            String strCadena = "";
            for (int cont = 0; cont < n - 2; cont++) {
                strCadena += "X" + (cont + 1) + "= " + result[cont] + "\n";
            }
            jTextArea1.setText(strCadena);
            for (int cont = 0; cont < n - 3; cont++) {
                p = p + df.format(result[cont]) + "X^" + (aux - 1) + " + ";
                aux = aux - 1;
            }
            p = p + df.format(result[n - 3]) + "X^0";
            //JOptionPane.showMessageDialog(null, "El polinomio calculado es:" + p);
            jTextField3.setText(p);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos inválidos");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextArea1.setText("");
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                jTable1.setValueAt(null, i, 0);
                for (int j = 1; j < jTable1.getColumnCount(); j++) {
                    jTable1.setValueAt(null, i, j);
                }
            }

            for (int i = 0; i < jTable2.getRowCount(); i++) {
                jTable2.setValueAt(null, i, 0);
                for (int j = 1; j < jTable2.getColumnCount(); j++) {
                    jTable2.setValueAt(null, i, j);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los elementos están vacíos");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
