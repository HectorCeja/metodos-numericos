/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazgraficametodos;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Héctor
 */
public class PanelMinimos extends javax.swing.JPanel {

    /**
     * Creates new form PanelMinimos
     */
    private static int n;
    private static int m;
    private static String ecuacion = "";
    Ecuacion F = new Ecuacion();
    DecimalFormat df = new DecimalFormat("0.0000");

    public PanelMinimos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldFuncion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textFieldResultado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SG = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        textFieldm = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldNoPuntos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textFieldValorX = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Y = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        X = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        NoIncognita = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        res = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 153));
        setPreferredSize(new java.awt.Dimension(800, 560));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel1.setText("Método de minimos cuadrados");
        add(jLabel1);
        jLabel1.setBounds(90, 20, 664, 25);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Tabla de mínimos cuadrados");
        add(jLabel4);
        jLabel4.setBounds(170, 360, 190, 17);

        textFieldFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFuncionActionPerformed(evt);
            }
        });
        add(textFieldFuncion);
        textFieldFuncion.setBounds(160, 310, 234, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Resultado:");
        add(jLabel6);
        jLabel6.setBounds(520, 470, 66, 17);

        textFieldResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldResultadoActionPerformed(evt);
            }
        });
        add(textFieldResultado);
        textFieldResultado.setBounds(586, 460, 150, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Soluciones del sistema de ecuaciones");
        add(jLabel5);
        jLabel5.setBounds(520, 260, 250, 20);

        SG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        SG.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x"
            }
        ));
        SG.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(SG);

        add(jScrollPane2);
        jScrollPane2.setBounds(540, 100, 230, 150);

        jButton3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton3.setText("Cargar Puntos");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(120, 250, 150, 40);

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton2.setText("Cargar Tabla");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(80, 120, 150, 40);

        textFieldm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldmActionPerformed(evt);
            }
        });
        add(textFieldm);
        textFieldm.setBounds(150, 170, 81, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Valor de x:");
        add(jLabel2);
        jLabel2.setBounds(20, 210, 86, 22);

        textFieldNoPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNoPuntosActionPerformed(evt);
            }
        });
        add(textFieldNoPuntos);
        textFieldNoPuntos.setBounds(130, 70, 179, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Numero de puntos:");
        add(jLabel3);
        jLabel3.setBounds(10, 90, 117, 17);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("orden del polinomio:");
        add(jLabel7);
        jLabel7.setBounds(20, 180, 126, 17);

        textFieldValorX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldValorXActionPerformed(evt);
            }
        });
        add(textFieldValorX);
        textFieldValorX.setBounds(150, 210, 81, 30);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        jButton1.setText("Vaciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(240, 120, 110, 40);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Sistema de ecuaciones generado");
        add(jLabel8);
        jLabel8.setBounds(550, 70, 210, 20);

        Y.setBackground(new java.awt.Color(255, 255, 153));
        Y.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "   Y"
            }
        ));
        jScrollPane4.setViewportView(Y);

        add(jScrollPane4);
        jScrollPane4.setBounds(430, 60, 70, 190);

        X.setBackground(new java.awt.Color(255, 255, 153));
        X.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "      X"
            }
        ));
        jScrollPane5.setViewportView(X);

        add(jScrollPane5);
        jScrollPane5.setBounds(360, 60, 70, 190);

        NoIncognita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "     a"
            }
        ));
        jScrollPane1.setViewportView(NoIncognita);

        add(jScrollPane1);
        jScrollPane1.setBounds(570, 280, 70, 120);

        res.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Valor"
            }
        ));
        jScrollPane6.setViewportView(res);

        add(jScrollPane6);
        jScrollPane6.setBounds(640, 280, 70, 120);

        tabla.setBackground(new java.awt.Color(51, 255, 255));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane7.setViewportView(tabla);

        add(jScrollPane7);
        jScrollPane7.setBounds(10, 380, 500, 170);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Polinomio generado:");
        add(jLabel9);
        jLabel9.setBounds(30, 320, 126, 17);
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFuncionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFuncionActionPerformed

    private void textFieldResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldResultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldResultadoActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            

            if (textFieldm.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No ha ingresado dato.");
            } else {

                m = Integer.parseInt(textFieldm.getText());
                if (m < 0) {
                    JOptionPane.showMessageDialog(null, "ingresa un dato valido.");
                }

                Object[][] TMC = new Object[(n + 1)][(3 * m + 1)];
                Object[][] S = new Object[(m + 1)][(m + 2)];
                Object[][] NoIncognitas = new Object[(m + 1)][1];
                String[] EncabezadoTMC = new String[(3 * m + 1)];
                String[] EncabezadoSG = new String[(m + 2)];

                for (int i = 0; i < (n + 1); i++) {
                    for (int j = 0; j < (3 * m + 1); j++) {
                        TMC[i][j] = null;
                    }
                }
                for (int i = 0; i < (m + 1); i++) {
                    for (int j = 0; j < (m + 2); j++) {
                        S[i][j] = null;
                    }
                }

                for (int i = 0; i < (m + 1); i++) {
                    NoIncognitas[i][0] = null;
                }

                EncabezadoTMC[0] = "x(i)";
                EncabezadoTMC[1] = "y(i)";
                for (int i = 2; i < (2 * m + 1); i++) {
                    EncabezadoTMC[i] = "x^" + i;
                }
                int sub = 1;
                for (int i = (2 * m + 1); i < (3 * m + 1); i++) {
                    EncabezadoTMC[i] = "x^" + (sub) + "(y)";
                    sub++;
                }
                for (int i = 0; i < (EncabezadoSG.length - 1); i++) {
                    EncabezadoSG[i] = "a" + (i);
                }
                EncabezadoSG[(m + 1)] = "Valor";

                tabla.setModel(new DefaultTableModel(TMC, EncabezadoTMC));
                tabla.disable();

                SG.setModel(new DefaultTableModel(S, EncabezadoSG));
                SG.disable();

                NoIncognita.setModel(new DefaultTableModel(NoIncognitas, new String[]{"a"}));

                for (int i = 0; i < (m + 1); i++) {
                    NoIncognita.setValueAt((i), i, 0);
                }
                NoIncognita.disable();

                res.setModel(new DefaultTableModel(NoIncognitas, new String[]{"Valor"}));
                res.disable();

            }

            MinimosCuadrados();
            
            
            textFieldResultado.setText(String.valueOf(F.ecuacion(ecuacion, Double.parseDouble(textFieldValorX.getText()))));
            

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos invalidos.");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

    }//GEN-LAST:event_jButton2MouseClicked

    

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (textFieldNoPuntos.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No ha ingresado puntos.");
            } else {
                n = Integer.parseInt(textFieldNoPuntos.getText());
                if (n < 0) {
                    JOptionPane.showMessageDialog(null, "ingresa un dato valido.");
                }

                Object[][] M = new Object[n][1];
                for (int i = 0; i < n; i++) {
                    M[i][0] = null;
                }
                X.setModel(new DefaultTableModel(M, new String[]{"x(i)"}));

                Y.setModel(new DefaultTableModel(M, new String[]{"y(i)"}));

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al ingresar los datos");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void textFieldmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldmActionPerformed

    private void textFieldNoPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNoPuntosActionPerformed

        // TODO add your handling code here:

    }//GEN-LAST:event_textFieldNoPuntosActionPerformed

    private void textFieldValorXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldValorXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldValorXActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            textFieldNoPuntos.setText(null);
            textFieldFuncion.setText(null);
            textFieldResultado.setText(null);
            textFieldValorX.setText(null);
            textFieldm.setText(null);
            ecuacion = null;
            for (int i = 0; i < X.getRowCount(); i++) {
                X.setValueAt(null, i, 0);
                for (int j = 1; j < X.getColumnCount(); j++) {
                    X.setValueAt(null, i, j);
                }
            }
            for (int i = 0; i < Y.getRowCount(); i++) {
                Y.setValueAt(null, i, 0);
                for (int j = 1; j < Y.getColumnCount(); j++) {
                    Y.setValueAt(null, i, j);
                }
            }
            for (int i = 0; i < tabla.getRowCount(); i++) {
                tabla.setValueAt(null, i, 0);
                for (int j = 1; j < tabla.getColumnCount(); j++) {
                    tabla.setValueAt(null, i, j);
                }
            }
            for (int i = 0; i < SG.getRowCount(); i++) {
                SG.setValueAt(null, i, 0);
                for (int j = 1; j < SG.getColumnCount(); j++) {
                    SG.setValueAt(null, i, j);
                }
            }
            for (int i = 0; i < res.getRowCount(); i++) {
                res.setValueAt(null, i, 0);
                for (int j = 1; j < res.getColumnCount(); j++) {
                    res.setValueAt(null, i, j);
                }
            }
            for (int i = 0; i < NoIncognita.getRowCount(); i++) {
                NoIncognita.setValueAt(null, i, 0);
                for (int j = 1; j < NoIncognita.getColumnCount(); j++) {
                    NoIncognita.setValueAt(null, i, j);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los elementos están vacíos");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void MinimosCuadrados() {
        String ecua="";
        int Potencia = 0;
        double x[] = new double[n], y[] = new double[n], a[] = new double[(m * 2 + 1)], b[] = new double[(m + 1)],
                C[][] = new double[(m + 1)][(m + 2)],
                Tabla[][] = new double[(n + 1)][(3 * m + 1)], Res[] = new double[(m + 1)], Suma = 0, Sum[] = new double[(3 * m + 1)];
        String Funcion = "";
        x = Matriz.CopiaVector(X, x, n);
        y = Matriz.CopiaVector(Y, y, n);
        a[0] = n;
        b[0] = 0;
        for (int i = 0; i < n; i++) {
            Tabla[i][0] = x[i];
            Tabla[i][1] = y[i];
            b[0] = b[0] + y[i];
            for (int j = 1; j <= 2 * m; j++) {
                a[j] = a[j] + Math.pow(x[i], j);
            }
            for (int j = 2; j <= 2 * m; j++) {
                Tabla[i][j] = Math.pow(x[i], j);
            }
            for (int j = 1; j <= m; j++) {
                b[j] += y[i] * Math.pow(x[i], j);
            }
            for (int j = 1; j <= m; j++) {
                Tabla[i][2 * m + j] = y[i] * Math.pow(x[i], j);
            }
        }
        for (int i = 1; i <= (m + 1); i++) {
            for (int j = 1; j <= (m + 1); j++) {
                C[i - 1][j - 1] = a[i + j - 2];
            }
            C[i - 1][m + 1] = b[i - 1];
        }
        for (int j = 0; j < (3 * m + 1); j++) {
            Suma = 0;
            for (int i = 0; i < n; i++) {
                Suma = Suma + Tabla[i][j];
            }
            Sum[j] = Suma;
        }
        for (int j = 0; j < (3 * m + 1); j++) {
            Tabla[n][j] = Sum[j];
        }
        Res = SistemaEcuacion.Cramer(C, (m + 1), (m + 2));
        Potencia = 1;
        Funcion += df.format(Res[0]);
        for (int j = 1; j <= m; j++) {
            if (Res[j] < 0) {
                Funcion += df.format(Res[j]) + "x^" + Potencia;
            } else if (Res[j] > 0) {
                Funcion += "+" + df.format(Res[j]) + "x^" + Potencia;
            }
            Potencia++;
        }
        tabla = Matriz.Copia(Tabla, tabla, (n + 1), (3 * m + 1));
        SG = Matriz.Copia(C, SG, (m + 1), (m + 2));
        res = Matriz.CopiaVector(Res, res, (m + 1));
        ecuacion = Funcion;
        textFieldFuncion.setText(Funcion);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable NoIncognita;
    private javax.swing.JTable SG;
    private javax.swing.JTable X;
    private javax.swing.JTable Y;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable res;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField textFieldFuncion;
    private javax.swing.JTextField textFieldNoPuntos;
    private javax.swing.JTextField textFieldResultado;
    private javax.swing.JTextField textFieldValorX;
    private javax.swing.JTextField textFieldm;
    // End of variables declaration//GEN-END:variables
}
